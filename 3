Design and develop inheritance for a given case study, identify objects
and relationships and implement inheritance wherever applicable. Employee
class with Emp_name, Emp_id, Address, Mail_id, and Mobile_no as members.
Inherit the classes, Programmer, Assistant Professor, Associate Professor and
Professor from employee class. Add Basic Pay (BP) as the member of all the
inherited classes with 97% of BP as DA, 10 % of BP as HRA, 12% of BP as PF, 
0.1% of BP for staff club fund. Generate pay slips for the employees with their
gross and net salary


class Employee{
String name, add, mail;
float id, mobile,basic;
void salary()
{
float da,hra,pf,cf,gross;
da = basic * 97/100;
hra = basic * 10/100;
pf = basic * 12/100;
cf = basic * 0.1f/100;
gross = basic + da + hra - pf - cf;
System.out.println("Name: " + name);
System.out.println("Basic Salary: " + basic);
System.out.println("Gross Salary: " + gross);
}
}
class Programmer extends Employee{
Programmer(String name,int sal){
this.name = name;
basic = sal;
}
}
class Assistant_Professor extends Employee{
Assistant_Professor(String name,int sal){
this.name = name;
basic = sal;
}
}
class Associate_Professor extends Employee{
Associate_Professor(String name,int sal){
this.name = name;
basic = sal;
}
}
class Professor extends Employee{
Professor(String name,int sal){
this.name = name;
basic = sal;
}
}
public class Inheritance{
public static void main(String args[]){
Assistant_Professor ast = new Assistant_Professor("Jai",40000);
ast.salary();
Associate_Professor aso = new Associate_Professor("Satyajeet",60000);
aso.salary();
Professor pro = new Professor("Ram",75000);
pro.salary();
Programmer pm = new Programmer("Akash",100000);
pm.salary();
}
}
